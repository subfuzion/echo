require=function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({vlfWWr:[function(require,module,exports){module.exports={EchoClient:require("./echoclient")}},{"./echoclient":3}],echo:[function(require,module,exports){module.exports=require("vlfWWr")},{}],3:[function(require,module,exports){var EchoClient=module.exports=function(){this.uri=null;this.ws=null;this.lastSentTimestamp=null;this.lastReceivedTimestamp=null;this.cache=null;this.onopen=null;this.onclose=null;this.onerror=null;this.onmessage=null;this.onhistory=null};EchoClient.prototype.open=function(uri){var self=this;if(this.isOpen()){console.log("already open on uri "+this.uri);return}this.uri=uri;this.ws=new WebSocket(uri);function callHandler(event){var handler=self["on"+event];if(typeof handler=="function"){handler.apply(handler,[].slice.call(arguments,1))}}this.ws.onopen=function(){callHandler("open")};this.ws.onclose=function(){callHandler("close")};this.ws.onmessage=function(messageEvent){self.lastReceivedTimestamp=(new Date).getTime();var message=JSON.parse(messageEvent.data);message.responseTime=self.lastReceivedTimestamp-self.lastSentTimestamp;if(message.messages.length>1){self.cache=message;callHandler("history",message)}else{self.cache=null;callHandler("message",message)}};this.ws.onerror=function(err){callHandler("error",err)}};EchoClient.prototype.close=function(){if(this.isClosed()){console.log("already closed");return}this.ws.close();this.ws=null;this.uri=null};EchoClient.prototype.isOpen=function(){return this.ws instanceof WebSocket};EchoClient.prototype.isClosed=function(){return!this.isOpen()};EchoClient.prototype.send=function(message){if(!message||!this.isOpen())return;this.lastSentTimestamp=(new Date).getTime();this.ws.send(message)};EchoClient.prototype.sendHistoryCommand=function(){this.send("[HISTORY]")};EchoClient.prototype.historyFilter=function(pattern){if(!this.cache)return[];if(!pattern)return this.cache;var regex=new RegExp(pattern,"i");var filtered=_.filter(this.cache.messages,function(message){return regex.test(message)});return{status:this.cache.status,responseTime:this.cache.responseTime,messages:filtered}};EchoClient.prototype.validatePort=function(port){return port>=1024&&port<65535}},{}]},{},[]);